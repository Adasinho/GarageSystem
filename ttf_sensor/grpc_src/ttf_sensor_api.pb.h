// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ttf_sensor_api.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_ttf_5fsensor_5fapi_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ttf_5fsensor_5fapi_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ttf_5fsensor_5fapi_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ttf_5fsensor_5fapi_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ttf_5fsensor_5fapi_2eproto;
namespace ttf_sensor_api {
class MeasureRequest;
struct MeasureRequestDefaultTypeInternal;
extern MeasureRequestDefaultTypeInternal _MeasureRequest_default_instance_;
class MeasureResponse;
struct MeasureResponseDefaultTypeInternal;
extern MeasureResponseDefaultTypeInternal _MeasureResponse_default_instance_;
}  // namespace ttf_sensor_api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ttf_sensor_api {
enum TTFSensorId : int {
  UNKNOWN_TTF_SENSOR_ID = 0,
  GATE_A_PARKING_TTF_SENSOR_ID = 1,
  GATE_A_POSITION_TTF_SENSOR_ID = 2,
  GATE_B_PARKING_TTF_SENSOR_ID = 3,
  GATE_B_POSITION_TTF_SENSOR_ID = 4,
  TTFSensorId_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TTFSensorId_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TTFSensorId_IsValid(int value);
extern const uint32_t TTFSensorId_internal_data_[];
constexpr TTFSensorId TTFSensorId_MIN = static_cast<TTFSensorId>(0);
constexpr TTFSensorId TTFSensorId_MAX = static_cast<TTFSensorId>(4);
constexpr int TTFSensorId_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
TTFSensorId_descriptor();
template <typename T>
const std::string& TTFSensorId_Name(T value) {
  static_assert(std::is_same<T, TTFSensorId>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TTFSensorId_Name().");
  return TTFSensorId_Name(static_cast<TTFSensorId>(value));
}
template <>
inline const std::string& TTFSensorId_Name(TTFSensorId value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TTFSensorId_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool TTFSensorId_Parse(absl::string_view name, TTFSensorId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TTFSensorId>(
      TTFSensorId_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class MeasureResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttf_sensor_api.MeasureResponse) */ {
 public:
  inline MeasureResponse() : MeasureResponse(nullptr) {}
  ~MeasureResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MeasureResponse(::google::protobuf::internal::ConstantInitialized);

  inline MeasureResponse(const MeasureResponse& from)
      : MeasureResponse(nullptr, from) {}
  MeasureResponse(MeasureResponse&& from) noexcept
    : MeasureResponse() {
    *this = ::std::move(from);
  }

  inline MeasureResponse& operator=(const MeasureResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeasureResponse& operator=(MeasureResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeasureResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MeasureResponse* internal_default_instance() {
    return reinterpret_cast<const MeasureResponse*>(
               &_MeasureResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MeasureResponse& a, MeasureResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MeasureResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeasureResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeasureResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MeasureResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MeasureResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MeasureResponse& from) {
    MeasureResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MeasureResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ttf_sensor_api.MeasureResponse";
  }
  protected:
  explicit MeasureResponse(::google::protobuf::Arena* arena);
  MeasureResponse(::google::protobuf::Arena* arena, const MeasureResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDistanceFieldNumber = 1,
  };
  // int32 distance = 1;
  void clear_distance() ;
  ::int32_t distance() const;
  void set_distance(::int32_t value);

  private:
  ::int32_t _internal_distance() const;
  void _internal_set_distance(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ttf_sensor_api.MeasureResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t distance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ttf_5fsensor_5fapi_2eproto;
};// -------------------------------------------------------------------

class MeasureRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ttf_sensor_api.MeasureRequest) */ {
 public:
  inline MeasureRequest() : MeasureRequest(nullptr) {}
  ~MeasureRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MeasureRequest(::google::protobuf::internal::ConstantInitialized);

  inline MeasureRequest(const MeasureRequest& from)
      : MeasureRequest(nullptr, from) {}
  MeasureRequest(MeasureRequest&& from) noexcept
    : MeasureRequest() {
    *this = ::std::move(from);
  }

  inline MeasureRequest& operator=(const MeasureRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeasureRequest& operator=(MeasureRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeasureRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MeasureRequest* internal_default_instance() {
    return reinterpret_cast<const MeasureRequest*>(
               &_MeasureRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MeasureRequest& a, MeasureRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(MeasureRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeasureRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeasureRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MeasureRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MeasureRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MeasureRequest& from) {
    MeasureRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MeasureRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ttf_sensor_api.MeasureRequest";
  }
  protected:
  explicit MeasureRequest(::google::protobuf::Arena* arena);
  MeasureRequest(::google::protobuf::Arena* arena, const MeasureRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // .ttf_sensor_api.TTFSensorId id = 1;
  void clear_id() ;
  ::ttf_sensor_api::TTFSensorId id() const;
  void set_id(::ttf_sensor_api::TTFSensorId value);

  private:
  ::ttf_sensor_api::TTFSensorId _internal_id() const;
  void _internal_set_id(::ttf_sensor_api::TTFSensorId value);

  public:
  // @@protoc_insertion_point(class_scope:ttf_sensor_api.MeasureRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ttf_5fsensor_5fapi_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MeasureRequest

// .ttf_sensor_api.TTFSensorId id = 1;
inline void MeasureRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::ttf_sensor_api::TTFSensorId MeasureRequest::id() const {
  // @@protoc_insertion_point(field_get:ttf_sensor_api.MeasureRequest.id)
  return _internal_id();
}
inline void MeasureRequest::set_id(::ttf_sensor_api::TTFSensorId value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ttf_sensor_api.MeasureRequest.id)
}
inline ::ttf_sensor_api::TTFSensorId MeasureRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ttf_sensor_api::TTFSensorId>(_impl_.id_);
}
inline void MeasureRequest::_internal_set_id(::ttf_sensor_api::TTFSensorId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// MeasureResponse

// int32 distance = 1;
inline void MeasureResponse::clear_distance() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.distance_ = 0;
}
inline ::int32_t MeasureResponse::distance() const {
  // @@protoc_insertion_point(field_get:ttf_sensor_api.MeasureResponse.distance)
  return _internal_distance();
}
inline void MeasureResponse::set_distance(::int32_t value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:ttf_sensor_api.MeasureResponse.distance)
}
inline ::int32_t MeasureResponse::_internal_distance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.distance_;
}
inline void MeasureResponse::_internal_set_distance(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.distance_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ttf_sensor_api


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ttf_sensor_api::TTFSensorId> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ttf_sensor_api::TTFSensorId>() {
  return ::ttf_sensor_api::TTFSensorId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ttf_5fsensor_5fapi_2eproto_2epb_2eh
